{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zgurb\\\\Desktop\\\\zngtech03\\\\zngtech03-client-fe\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { createContext } from \"react\";\nimport { initializeHttpService } from \"../services/httpService\";\nimport useCheckUser from \"../hooks/useCheckUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  initializeHttpService(getAccessTokenSilently, \"http://localhost:8000/api/v1/\");\n  let user = useCheckUser();\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: user,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(UserContextProvider, \"gEBZusFMxq/mwRiD6pEDWno1UfI=\", false, function () {\n  return [useAuth0, useCheckUser];\n});\n_c = UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["useAuth0","createContext","initializeHttpService","useCheckUser","jsxDEV","_jsxDEV","UserContext","UserContextProvider","_ref","_s","children","getAccessTokenSilently","user","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zgurb/Desktop/zngtech03/zngtech03-client-fe/src/contexts/UserContext.js"],"sourcesContent":["import { useAuth0 } from \"@auth0/auth0-react\";\nimport { createContext } from \"react\";\nimport { initializeHttpService } from \"../services/httpService\";\nimport useCheckUser from \"../hooks/useCheckUser\";\n\nexport const UserContext = createContext();\n\nexport const UserContextProvider = ({children}) => {\n    const { getAccessTokenSilently } = useAuth0();\n    initializeHttpService(getAccessTokenSilently, \"http://localhost:8000/api/v1/\");\n    let user = useCheckUser();\n\n    return (\n        <UserContext.Provider value={user}>\n            {children}\n        </UserContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,QAAQ,OAAO;AACrC,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAOC,YAAY,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,mBAAmB,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC1C,MAAM;IAAEG;EAAuB,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAC7CE,qBAAqB,CAACS,sBAAsB,EAAE,+BAA+B,CAAC;EAC9E,IAAIC,IAAI,GAAGT,YAAY,CAAC,CAAC;EAEzB,oBACIE,OAAA,CAACC,WAAW,CAACO,QAAQ;IAACC,KAAK,EAAEF,IAAK;IAAAF,QAAA,EAC7BA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAT,EAAA,CAVYF,mBAAmB;EAAA,QACOP,QAAQ,EAEhCG,YAAY;AAAA;AAAAgB,EAAA,GAHdZ,mBAAmB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}