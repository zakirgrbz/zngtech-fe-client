{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zgurb\\\\Desktop\\\\zngtech02\\\\zngtech02-client-fe\\\\src\\\\pages\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport postService from '../services/postService';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport commentService from '../services/commentService';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  var _post$User;\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState([]);\n  const {\n    postId\n  } = useParams();\n  const getPostById = async () => {\n    try {\n      const fetchedPost = await postService.getPostById(postId);\n      if (fetchedPost) {\n        setPost(fetchedPost);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getComments = async () => {\n    console.error(postId);\n    const fetchedComments = await commentService.getCommentsByPostId(postId);\n    if (fetchedComments) {\n      setComments(fetchedComments);\n    }\n  };\n  useEffect(() => {\n    getPostById();\n    getComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"masthead\",\n        style: {\n          backgroundImage: \"url('https://hicoders.ch/wp-content/uploads/2022/03/66-Talent.png')\",\n          backgroundSize: \"contain\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"position-relative px-4 px-lg-5\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"gx-4 gx-lg-5 justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 10,\n              lg: 8,\n              xl: 7,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"site-heading\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: post === null || post === void 0 ? void 0 : post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"subheading\",\n                  children: [\"published by \", (_post$User = post.User) === null || _post$User === void 0 ? void 0 : _post$User.name, \" on \", new Intl.DateTimeFormat(\"en-US\", {\n                    year: \"numeric\",\n                    month: \"long\",\n                    day: \"2-digit\"\n                  }).format(new Date(post.createdAt))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"content\",\n            className: \"text-start text-light mb-5\",\n            children: post === null || post === void 0 ? void 0 : post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-white\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), comments && comments.length > 0 ? comments.map(comment => {\n              var _comment$User;\n              return /*#__PURE__*/_jsxDEV(Card, {\n                body: true,\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"By \", comment === null || comment === void 0 ? void 0 : (_comment$User = comment.User) === null || _comment$User === void 0 ? void 0 : _comment$User.name, \" on \", new Intl.DateTimeFormat(\"en-US\", {\n                    year: \"numeric\",\n                    month: \"long\",\n                    day: \"2-digit\"\n                  }).format(new Date(comment.createdAt))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this)]\n              }, comment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white\",\n              children: \"No comments yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"post \", postId, \" not found :(\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"D7HkSXdJP5ERJrr4THJz9vYrsfA=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useParams","postService","Container","Row","Col","commentService","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_s","_post$User","post","setPost","comments","setComments","postId","getPostById","fetchedPost","error","console","log","getComments","fetchedComments","getCommentsByPostId","children","className","style","backgroundImage","backgroundSize","md","lg","xl","title","fileName","_jsxFileName","lineNumber","columnNumber","User","name","Intl","DateTimeFormat","year","month","day","format","Date","createdAt","id","content","length","map","comment","_comment$User","body","_c","$RefreshReg$"],"sources":["C:/Users/zgurb/Desktop/zngtech02/zngtech02-client-fe/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport postService from '../services/postService';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport commentService from '../services/commentService';\nimport Card from 'react-bootstrap/Card';\n\nfunction Post() {\n  const [post, setPost] = useState();\n  const [comments,setComments] = useState([]);\n  const { postId } = useParams()\n\n  const getPostById = async () => {\n    try {\n      const fetchedPost = await postService.getPostById(postId)\n      if (fetchedPost) {\n        setPost(fetchedPost);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\nconst getComments = async () =>{\n  console.error(postId);\n  const fetchedComments  = await commentService.getCommentsByPostId(postId);\n  if (fetchedComments) {\n    setComments(fetchedComments);\n\n  }\n}\n  useEffect(() => {\n    getPostById()\n    getComments()\n\n  }, []);\n\n\n  return (\n    <div>\n      {post ?\n        <>\n          <header className=\"masthead\" style={{ backgroundImage: \"url('https://hicoders.ch/wp-content/uploads/2022/03/66-Talent.png')\", backgroundSize: \"contain\" }}>\n            <Container className=\"position-relative px-4 px-lg-5\">\n              <Row className=\"gx-4 gx-lg-5 justify-content-center\">\n                <Col md={10} lg={8} xl={7}>\n                  <div className=\"site-heading\">\n                    <h1>{post?.title}</h1>\n                    <span className=\"subheading\">published by {post.User?.name} on {new Intl.DateTimeFormat(\"en-US\", {\n                      year: \"numeric\",\n                      month: \"long\",\n                      day: \"2-digit\",\n                    }).format(new Date(post.createdAt))}</span>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </header>\n          <Container>\n            <Row>\n              <div id='content' className='text-start text-light mb-5'>{post?.content}</div>\n            </Row>\n\n\n          <Row>\n          <Col >\n            <h2 className='text-white'>Comments</h2>\n            {comments && comments.length > 0 ? (\n              comments.map(comment => (\n                <Card body className='mt-2' key={comment.id}>\n                  <p>{comment.content}</p>\n                  <small>By {comment?.User?.name} on {new Intl.DateTimeFormat(\"en-US\", {\n                    year: \"numeric\",\n                    month: \"long\",\n                    day: \"2-digit\",\n                  }).format(new Date(comment.createdAt))}</small>\n                </Card>\n              ))\n            ) : (\n              <p className='text-white'>No comments yet.</p>\n            )}\n          </Col>\n        </Row>\n          </Container>\n\n          \n        </>\n        :\n        <h1>\n          post {postId} not found :( \n        </h1>\n      }\n    </div>\n  )\n}\n\nexport default Post"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}