{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zgurb\\\\Desktop\\\\zngtech04\\\\client-fe\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$();\n// Modified UserContextProvider to fetch complete user object\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { initializeHttpService } from \"../services/httpService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  initializeHttpService(getAccessTokenSilently, \"http://localhost:8000/api/v1/\");\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetchUserData(); // Replace with your API call to fetch user data\n        setUser(response.user); // Assuming the response includes the complete user object\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: user,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(UserContextProvider, \"tz10TLgEjwRouPYlBfjiHkmfteY=\", false, function () {\n  return [useAuth0];\n});\n_c = UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["useAuth0","createContext","useEffect","useState","initializeHttpService","jsxDEV","_jsxDEV","UserContext","UserContextProvider","_ref","_s","children","getAccessTokenSilently","user","setUser","fetchUser","response","fetchUserData","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zgurb/Desktop/zngtech04/client-fe/src/contexts/UserContext.js"],"sourcesContent":["// Modified UserContextProvider to fetch complete user object\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { initializeHttpService } from \"../services/httpService\";\n\nexport const UserContext = createContext();\n\nexport const UserContextProvider = ({children}) => {\n    const { getAccessTokenSilently } = useAuth0();\n    initializeHttpService(getAccessTokenSilently, \"http://localhost:8000/api/v1/\");\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n      const fetchUser = async () => {\n        try {\n          const response = await fetchUserData(); // Replace with your API call to fetch user data\n          setUser(response.user); // Assuming the response includes the complete user object\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      };\n\n      fetchUser();\n    }, []);\n\n    return (\n        <UserContext.Provider value={user}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,qBAAqB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,mBAAmB,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC1C,MAAM;IAAEG;EAAuB,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAC7CI,qBAAqB,CAACQ,sBAAsB,EAAE,+BAA+B,CAAC;EAC9E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,aAAa,CAAC,CAAC,CAAC,CAAC;QACxCH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAER,IAAK;IAAAF,QAAA,EAC7BA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAf,EAAA,CAvBYF,mBAAmB;EAAA,QACOR,QAAQ;AAAA;AAAA0B,EAAA,GADlClB,mBAAmB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}