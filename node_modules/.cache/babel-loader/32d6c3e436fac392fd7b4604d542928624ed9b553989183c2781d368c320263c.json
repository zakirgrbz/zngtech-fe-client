{"ast":null,"code":"import axios from \"axios\";\nlet axiosInstance = null;\nfunction initializeHttpService(tokenFactory, baseUrl) {\n  axiosInstance = axios.create({\n    baseURL: baseUrl\n  });\n  axiosInstance.interceptors.request.use(async config => {\n    const accessToken = await tokenFactory();\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    return config;\n  });\n}\nexport { axiosInstance as api, initializeHttpService };","map":{"version":3,"names":["axios","axiosInstance","initializeHttpService","tokenFactory","baseUrl","create","baseURL","interceptors","request","use","config","accessToken","headers","Authorization","api"],"sources":["C:/Users/zgurb/Desktop/zngtech02/zngtech02-client-fe/src/services/httpService.js"],"sourcesContent":["import axios from \"axios\";\nlet axiosInstance = null;\n\nfunction initializeHttpService(tokenFactory, baseUrl) {\n    axiosInstance = axios.create({\n        baseURL: baseUrl\n    })\n\n    axiosInstance.interceptors.request.use(async (config) => {\n        const accessToken = await tokenFactory();\n        config.headers.Authorization = `Bearer ${accessToken}`;\n        return config;\n    });\n\n}\n\nexport { axiosInstance as api, initializeHttpService };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAIC,aAAa,GAAG,IAAI;AAExB,SAASC,qBAAqBA,CAACC,YAAY,EAAEC,OAAO,EAAE;EAClDH,aAAa,GAAGD,KAAK,CAACK,MAAM,CAAC;IACzBC,OAAO,EAAEF;EACb,CAAC,CAAC;EAEFH,aAAa,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;IACrD,MAAMC,WAAW,GAAG,MAAMR,YAAY,CAAC,CAAC;IACxCO,MAAM,CAACE,OAAO,CAACC,aAAa,GAAI,UAASF,WAAY,EAAC;IACtD,OAAOD,MAAM;EACjB,CAAC,CAAC;AAEN;AAEA,SAAST,aAAa,IAAIa,GAAG,EAAEZ,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}