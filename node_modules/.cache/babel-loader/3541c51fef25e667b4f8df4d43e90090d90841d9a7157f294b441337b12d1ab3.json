{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport userService from '../services/userService';\nimport { useNavigate } from 'react-router-dom';\nconst useCheckUser = () => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  let navigate = useNavigate();\n  const [currentUser, setCurrentUser] = useState(user);\n  const checkUser = async () => {\n    if (isAuthenticated) {\n      const remoteUser = await userService.getUser(user.email);\n      if (remoteUser) {\n        setCurrentUser({\n          ...user,\n          role: remoteUser.role,\n          id: remoteUser.id\n        });\n        navigate('/dashboard');\n      } else {\n        navigate('/welcome');\n      }\n    }\n  };\n  useEffect(() => {\n    checkUser();\n  }, [isAuthenticated]);\n\n  // // Return any necessary values as an array or an object\n  return currentUser;\n};\n_s(useCheckUser, \"0djspzJdSL2lJFZxXm1T9LG5H8U=\", false, function () {\n  return [useAuth0, useNavigate];\n});\nexport default useCheckUser;","map":{"version":3,"names":["useEffect","useState","useAuth0","userService","useNavigate","useCheckUser","_s","user","isAuthenticated","navigate","currentUser","setCurrentUser","checkUser","remoteUser","getUser","email","role","id"],"sources":["C:/Users/zgurb/Desktop/zngtech04/client-fe/src/hooks/useCheckUser.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport userService from '../services/userService';\nimport { useNavigate } from 'react-router-dom';\n\nconst useCheckUser = () => {\n  const { user, isAuthenticated } = useAuth0();\n  let navigate = useNavigate();\n  const [currentUser, setCurrentUser] = useState(user);\n  const checkUser = async () => {\n    if (isAuthenticated) {\n      const remoteUser = await userService.getUser(user.email);\n      if (remoteUser) {\n        setCurrentUser({\n          ...user,\n          role:remoteUser.role,\n          id:remoteUser.id\n        })\n        navigate('/dashboard');\n      } else {\n        navigate('/welcome');\n      }\n    }\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, [isAuthenticated]);\n\n  // // Return any necessary values as an array or an object\n  return currentUser;\n};\n\nexport default useCheckUser;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,IAAI;IAAEC;EAAgB,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC5C,IAAIO,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC5B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACM,IAAI,CAAC;EACpD,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIJ,eAAe,EAAE;MACnB,MAAMK,UAAU,GAAG,MAAMV,WAAW,CAACW,OAAO,CAACP,IAAI,CAACQ,KAAK,CAAC;MACxD,IAAIF,UAAU,EAAE;QACdF,cAAc,CAAC;UACb,GAAGJ,IAAI;UACPS,IAAI,EAACH,UAAU,CAACG,IAAI;UACpBC,EAAE,EAACJ,UAAU,CAACI;QAChB,CAAC,CAAC;QACFR,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACLA,QAAQ,CAAC,UAAU,CAAC;MACtB;IACF;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,eAAe,CAAC,CAAC;;EAErB;EACA,OAAOE,WAAW;AACpB,CAAC;AAACJ,EAAA,CA1BID,YAAY;EAAA,QACkBH,QAAQ,EAC3BE,WAAW;AAAA;AA0B5B,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}