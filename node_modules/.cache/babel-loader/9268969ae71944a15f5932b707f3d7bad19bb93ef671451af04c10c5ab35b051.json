{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zgurb\\\\Desktop\\\\zngtech03\\\\zngtech03-client-fe\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { UserContext } from '../contexts/UserContext';\nimport postService from '../services/postService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePost() {\n  _s();\n  const user = useContext(UserContext);\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().max(50, 'Title must be 50 characters or less').required('Title is required'),\n    content: Yup.string().max(500, 'Content must be 500 characters or less').required('Content is required')\n  });\n  const createPost = async newPost => {\n    try {\n      await postService.createPost(newPost);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: '',\n        content: '',\n        userId: user.id\n      },\n      validationSchema: validationSchema,\n      onSubmit: async (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        console.log(values);\n        await createPost(values);\n        // Call function to create post with values object\n        setSubmitting(false);\n      },\n      children: _ref2 => {\n        let {\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              className: \"text-white display-6\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"title\",\n              id: \"title\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"title\",\n              component: \"div\",\n              className: \"text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"content\",\n              className: \"text-white display-6\",\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"textarea\",\n              type: \"text\",\n              name: \"content\",\n              id: \"content\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"content\",\n              component: \"div\",\n              className: \"text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: isSubmitting,\n            children: isSubmitting ? 'Creating...' : 'Create Post'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","useContext","Container","Yup","UserContext","postService","jsxDEV","_jsxDEV","CreatePost","_s","user","validationSchema","object","shape","title","string","max","required","content","createPost","newPost","error","console","log","children","initialValues","userId","id","onSubmit","values","_ref","setSubmitting","_ref2","isSubmitting","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","component","as","disabled","_c","$RefreshReg$"],"sources":["C:/Users/zgurb/Desktop/zngtech03/zngtech03-client-fe/src/pages/CreatePost.js"],"sourcesContent":["import {Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { UserContext } from '../contexts/UserContext';\nimport postService from '../services/postService';\n\nfunction CreatePost() {\n  const user = useContext(UserContext)\n  \n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .max(50, 'Title must be 50 characters or less')\n      .required('Title is required'),\n    content: Yup.string()\n      .max(500, 'Content must be 500 characters or less')\n      .required('Content is required')\n  });\n  const createPost = async (newPost) => {\n    try {\n      await postService.createPost(newPost) \n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{\n          title: '',\n          content: '',\n          userId:user.id\n        }}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting }) => {\n\n          console.log(values);\n          await createPost(values)\n          // Call function to create post with values object\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\" className=\"text-white display-6\">\n                Title\n              </label>\n              <Field\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                className=\"form-control\"\n              />\n              <ErrorMessage\n                name=\"title\"\n                component=\"div\"\n                className=\"text-danger\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"content\" className=\"text-white display-6\">\n                Content\n              </label>\n              <Field\n                as=\"textarea\"\n                type=\"text\"\n                name=\"content\"\n                id=\"content\"\n                className=\"form-control\"\n              />\n              <ErrorMessage\n                name=\"content\"\n                component=\"div\"\n                className=\"text-danger\"\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Creating...' : 'Create Post'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nexport default CreatePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}